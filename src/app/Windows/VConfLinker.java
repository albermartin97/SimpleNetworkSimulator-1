/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app.Windows;

import app.Elements.LinkerItem;
import app.Elements.SimulatorItem;
import java.awt.Cursor;
import java.math.BigDecimal;
import material.graphs.Edge;
import objects.Linker;

/**
 *
 * @author alber
 */
public class VConfLinker extends javax.swing.JFrame {

    private SimulatorItem si;
    private VMain vMain;
    private LinkerItem li;

    /**
     * Creates new form VConfLinker
     */
    public VConfLinker(VMain vMain) {
        this.si = vMain.getSI();
        this.vMain = vMain;
        initComponents();
        setLocation((getToolkit().getScreenSize().width - this.getWidth()) / 2,
                (getToolkit().getScreenSize().height - this.getHeight()) / 2);
    }

    public VConfLinker(Edge<Linker> el, VMain vMain) {
        this.si = vMain.getSI();
        this.vMain = vMain;
        for (LinkerItem li : vMain.getSI().getWorkSpacePanel().getLinkers()) {
            if (li.getLblName().getText().equals(el.getElement().getIp())) {
                this.li = li;
            }
        }
        initComponents();
        configComponents(li);
        setLocation((getToolkit().getScreenSize().width - this.getWidth()) / 2,
                (getToolkit().getScreenSize().height - this.getHeight()) / 2);
    }

    public VConfLinker() {
        initComponents();
        setLocation((getToolkit().getScreenSize().width - this.getWidth()) / 2,
                (getToolkit().getScreenSize().height - this.getHeight()) / 2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jConfLinker = new javax.swing.JPanel();
        lblSpeedLinker = new javax.swing.JLabel();
        lblSizeLinker = new javax.swing.JLabel();
        txtSpeedLinker = new javax.swing.JTextField();
        txtSizeLinker = new javax.swing.JTextField();
        btnAceptarConfLinker = new javax.swing.JButton();
        btnCancelarConfLinker = new javax.swing.JButton();
        lblNameLinker = new javax.swing.JLabel();
        txtNameLinker = new javax.swing.JTextField();
        cBoxUnidadesVelocidad = new javax.swing.JComboBox<>();
        cBoxUnidadesDistancia = new javax.swing.JComboBox<>();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("app/Windows/Bundle"); // NOI18N
        jLabel1.setText(bundle.getString("VConfLinker.jLabel1.text")); // NOI18N

        setTitle(bundle.getString("VConfLinker.title")); // NOI18N
        setAlwaysOnTop(true);
        setResizable(false);

        lblSpeedLinker.setText(bundle.getString("VConfLinker.lblSpeedLinker.text")); // NOI18N

        lblSizeLinker.setText(bundle.getString("VConfLinker.lblSizeLinker.text")); // NOI18N

        txtSpeedLinker.setToolTipText(bundle.getString("VConfLinker.txtSpeedLinker.toolTipText")); // NOI18N

        txtSizeLinker.setToolTipText(bundle.getString("VConfLinker.txtSizeLinker.toolTipText")); // NOI18N

        btnAceptarConfLinker.setText(bundle.getString("VConfLinker.btnAceptarConfLinker.text")); // NOI18N
        btnAceptarConfLinker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarConfLinkerActionPerformed(evt);
            }
        });

        btnCancelarConfLinker.setText(bundle.getString("VConfLinker.btnCancelarConfLinker.text")); // NOI18N
        btnCancelarConfLinker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarConfLinkerActionPerformed(evt);
            }
        });

        lblNameLinker.setText(bundle.getString("VConfLinker.lblNameLinker.text")); // NOI18N

        txtNameLinker.setToolTipText(bundle.getString("VConfLinker.txtNameLinker.toolTipText")); // NOI18N

        cBoxUnidadesVelocidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gb/s", "Mb/s", "Kb/s", "b/s" }));
        cBoxUnidadesVelocidad.setSelectedItem("b/s");
        cBoxUnidadesVelocidad.setToolTipText(bundle.getString("VConfLinker.cBoxUnidadesVelocidad.toolTipText")); // NOI18N

        cBoxUnidadesDistancia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "km", "m", "cm", "mm" }));
        cBoxUnidadesDistancia.setSelectedItem("m");
        cBoxUnidadesDistancia.setToolTipText(bundle.getString("VConfLinker.cBoxUnidadesDistancia.toolTipText")); // NOI18N

        javax.swing.GroupLayout jConfLinkerLayout = new javax.swing.GroupLayout(jConfLinker);
        jConfLinker.setLayout(jConfLinkerLayout);
        jConfLinkerLayout.setHorizontalGroup(
            jConfLinkerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jConfLinkerLayout.createSequentialGroup()
                .addContainerGap(102, Short.MAX_VALUE)
                .addComponent(btnAceptarConfLinker, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCancelarConfLinker, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 10, Short.MAX_VALUE))
            .addGroup(jConfLinkerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jConfLinkerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSpeedLinker)
                    .addComponent(lblNameLinker)
                    .addComponent(lblSizeLinker))
                .addGap(18, 18, 18)
                .addGroup(jConfLinkerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtSizeLinker, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                    .addComponent(txtNameLinker, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSpeedLinker, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jConfLinkerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cBoxUnidadesVelocidad, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cBoxUnidadesDistancia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jConfLinkerLayout.setVerticalGroup(
            jConfLinkerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jConfLinkerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jConfLinkerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNameLinker)
                    .addComponent(txtNameLinker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jConfLinkerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSpeedLinker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSpeedLinker)
                    .addComponent(cBoxUnidadesVelocidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jConfLinkerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSizeLinker)
                    .addComponent(txtSizeLinker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cBoxUnidadesDistancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(jConfLinkerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelarConfLinker, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAceptarConfLinker, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jConfLinker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jConfLinker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAceptarConfLinkerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarConfLinkerActionPerformed
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("app/Windows/Bundle");
        if (li == null) {
            this.vMain.setRouting(false);
            Linker l = new Linker();
            String distanceUnite = getDistanceUnite();
            String speedUnite = getSpeedUnite();
            l.setDistance(new BigDecimal(txtSizeLinker.getText()).multiply(new BigDecimal(distanceUnite)));
            l.setSpeed(new BigDecimal(txtSpeedLinker.getText()).multiply(new BigDecimal(speedUnite)));
            l.setIp(txtNameLinker.getText());
            si.setL(l);
            this.setVisible(false);
            si.setConectarHosts(true);

            if (si.getWorkSpacePanel().getChildsItems().size() > 0 && si.getWorkSpacePanel().getLinkers().size() + 1 >= si.getWorkSpacePanel().getChildsItems().size() - 1) {
                this.vMain.getBtnEnrutar().setEnabled(true);
            } else {
                this.vMain.getBtnEnrutar().setEnabled(false);
            }

            this.vMain.enabled(false);
            Cursor cursor = new Cursor(Cursor.CROSSHAIR_CURSOR);
            this.vMain.setCursor(cursor);
            this.vMain.setVisible(true);
            this.vMain.getSI().getWorkSpacePanel().paint(this.getGraphics());
        } else {
            li.getLblName().setText(txtNameLinker.getText());
            li.getLinker().getElement().setIp(txtNameLinker.getText());
            String distanceUnite = getDistanceUnite();
            String speedUnite = getSpeedUnite();
            li.getLinker().getElement().setDistance(new BigDecimal(txtSizeLinker.getText()).multiply(new BigDecimal(distanceUnite)));
            li.getLinker().getElement().setSpeed(new BigDecimal(txtSpeedLinker.getText()).multiply(new BigDecimal(speedUnite)));
            li.getLinker().getElement().setIp(txtNameLinker.getText());
            li.getLblName().setToolTipText(bundle.getString("speed") + "= " + li.getLinker().getElement().getSpeed().toString() + "; " + bundle.getString("distance") + "= " + li.getLinker().getElement().getDistance().toString());
            this.setVisible(false);
            this.vMain.setVisible(true);
            this.vMain.getSI().getWorkSpacePanel().paint(this.getGraphics());
        }
    }//GEN-LAST:event_btnAceptarConfLinkerActionPerformed

    private void btnCancelarConfLinkerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarConfLinkerActionPerformed
        this.setVisible(false);
        si.setConectarHosts(false);
    }//GEN-LAST:event_btnCancelarConfLinkerActionPerformed
    private void configComponents(LinkerItem li) {
        txtNameLinker.setText(li.getLinker().getElement().getIp());
        txtSizeLinker.setText(li.getLinker().getElement().getDistance().toString());
        txtSpeedLinker.setText(li.getLinker().getElement().getSpeed().toString());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptarConfLinker;
    private javax.swing.JButton btnCancelarConfLinker;
    private javax.swing.JComboBox<String> cBoxUnidadesDistancia;
    private javax.swing.JComboBox<String> cBoxUnidadesVelocidad;
    private javax.swing.JPanel jConfLinker;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblNameLinker;
    private javax.swing.JLabel lblSizeLinker;
    private javax.swing.JLabel lblSpeedLinker;
    private javax.swing.JTextField txtNameLinker;
    private javax.swing.JTextField txtSizeLinker;
    private javax.swing.JTextField txtSpeedLinker;
    // End of variables declaration//GEN-END:variables

    private String getDistanceUnite() {
        switch (cBoxUnidadesDistancia.getSelectedIndex()) {
            case 0:
                return "1000";
            case 1:
                return "1";
            case 2:
                return "0.001";
            case 3:
                return "0.0001";
            default:
                return "1";
        }
    }

    private String getSpeedUnite() {
        switch (cBoxUnidadesVelocidad.getSelectedIndex()) {
            case 0:
                return "1000000000";
            case 1:
                return "1000000";
            case 2:
                return "1000";
            case 3:
                return "1";
            default:
                return "1";
        }
    }

}
