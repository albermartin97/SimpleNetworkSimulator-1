/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app.Windows;

import app.Elements.SimulatorItem;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JToolBar;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import simulator.Event;

/**
 *
 * @author alber
 */
public class VTraceStepByStep extends javax.swing.JFrame {

    private SimulatorItem si;
    private List<Event> eventos;
    private int contRow;
    private int i = 0;

    /**
     * Creates new form VTraceStepByStep
     */
    public VTraceStepByStep() {
        initComponents();
        setLocation((getToolkit().getScreenSize().width - this.getWidth()) / 2,
                (getToolkit().getScreenSize().height - this.getHeight()) / 2);
    }

    public VTraceStepByStep(SimulatorItem si) {
        this.si = si;
        this.eventos = new ArrayList<>();
        this.contRow = 0;
        initComponents();
        //btnPlayUntil.setEnabled(false);
        setLocation((getToolkit().getScreenSize().width - this.getWidth()) / 2,
                (getToolkit().getScreenSize().height - this.getHeight()) / 2);
    }

    public VTraceStepByStep(SimulatorItem si, List<Event> eventos) {
        this.si = si;
        this.eventos = new ArrayList<>();
        this.contRow = 0;
        initComponents();
        configComponents(eventos);
        //btnPlayUntil.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTrace = new javax.swing.JPanel();
        jTableTrace = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTEvents = new javax.swing.JTable();
        tbtMenu = new javax.swing.JToolBar();
        btnNextTrace = new javax.swing.JButton();
        txtTime = new javax.swing.JTextField();
        tbtMenu2 = new javax.swing.JToolBar();
        btnPlayUntil = new javax.swing.JButton();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("app/Windows/Bundle"); // NOI18N
        setTitle(bundle.getString("VTraceStepByStep.title")); // NOI18N
        setAlwaysOnTop(true);

        jTableTrace.setMinimumSize(new java.awt.Dimension(679, 246));

        jTEvents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Instante", "Origen", "Destino", "Enlace", "Tiempo", "Mensaje"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTEvents.getColumnModel().getColumn(0).setPreferredWidth(10);
        jScrollPane1.setViewportView(jTEvents);
        if (jTEvents.getColumnModel().getColumnCount() > 0) {
            jTEvents.getColumnModel().getColumn(0).setPreferredWidth(3);
            jTEvents.getColumnModel().getColumn(1).setPreferredWidth(3);
            jTEvents.getColumnModel().getColumn(2).setPreferredWidth(3);
            jTEvents.getColumnModel().getColumn(3).setPreferredWidth(3);
            jTEvents.getColumnModel().getColumn(4).setPreferredWidth(7);
            jTEvents.getColumnModel().getColumn(5).setResizable(false);
            jTEvents.getColumnModel().getColumn(5).setPreferredWidth(10);
        }

        javax.swing.GroupLayout jTableTraceLayout = new javax.swing.GroupLayout(jTableTrace);
        jTableTrace.setLayout(jTableTraceLayout);
        jTableTraceLayout.setHorizontalGroup(
            jTableTraceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jTableTraceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jTableTraceLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 659, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jTableTraceLayout.setVerticalGroup(
            jTableTraceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 246, Short.MAX_VALUE)
            .addGroup(jTableTraceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jTableTraceLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        tbtMenu.setBorder(null);
        tbtMenu.setFloatable(false);
        tbtMenu.setRollover(true);
        tbtMenu.setToolTipText(bundle.getString("VTraceStepByStep.tbtMenu.toolTipText")); // NOI18N

        btnNextTrace.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/nextIcon2.png"))); // NOI18N
        btnNextTrace.setToolTipText(bundle.getString("VTraceStepByStep.btnNextTrace.toolTipText")); // NOI18N
        btnNextTrace.setFocusable(false);
        btnNextTrace.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNextTrace.setMargin(new java.awt.Insets(5, 20, 5, 20));
        btnNextTrace.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNextTrace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextTraceActionPerformed(evt);
            }
        });
        tbtMenu.add(btnNextTrace);

        txtTime.setToolTipText(bundle.getString("VTraceStepByStep.txtTime.toolTipText")); // NOI18N
        txtTime.setPreferredSize(new java.awt.Dimension(6, 22));

        tbtMenu2.setBorder(null);
        tbtMenu2.setFloatable(false);

        btnPlayUntil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/iconStartToFinish2.png"))); // NOI18N
        btnPlayUntil.setToolTipText(bundle.getString("VTraceStepByStep.btnPlayUntil.toolTipText")); // NOI18N
        btnPlayUntil.setFocusable(false);
        btnPlayUntil.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPlayUntil.setMargin(new java.awt.Insets(5, 20, 5, 20));
        btnPlayUntil.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnPlayUntil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayUntilActionPerformed(evt);
            }
        });
        tbtMenu2.add(btnPlayUntil);

        javax.swing.GroupLayout jTraceLayout = new javax.swing.GroupLayout(jTrace);
        jTrace.setLayout(jTraceLayout);
        jTraceLayout.setHorizontalGroup(
            jTraceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jTraceLayout.createSequentialGroup()
                .addContainerGap(176, Short.MAX_VALUE)
                .addComponent(tbtMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(tbtMenu2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(177, Short.MAX_VALUE))
            .addComponent(jTableTrace, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jTraceLayout.setVerticalGroup(
            jTraceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jTraceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jTraceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jTraceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(tbtMenu, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                        .addComponent(tbtMenu2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jTableTrace, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTrace, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTrace, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNextTraceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextTraceActionPerformed
        List<Event> ev = this.si.getSimulator().playOneStep(i);
        eventos.addAll(ev);
        eventos.sort(new Event());
        i++;
        if (!eventos.isEmpty()) {
            Event e = eventos.remove(0);
            DefaultTableModel model = (DefaultTableModel) jTEvents.getModel();
            model.addRow(new Object[]{e.getTime(), e.getHostOrigen().getName(), e.getHostDestino().getName(), e.getLinker().getIp(), e.getInstant(), e.getMensaje()});
            jTEvents.updateUI();
        } else {
            btnNextTrace.setEnabled(false);
        }
    }//GEN-LAST:event_btnNextTraceActionPerformed

    private void btnPlayUntilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayUntilActionPerformed
        boolean formatoCorrecto = true;
        BigDecimal time = null;
        try {
            time = new BigDecimal(txtTime.getText());
        } catch (NumberFormatException ne) {
            formatoCorrecto = false;
        }
        if (formatoCorrecto) {
            //BigDecimal time = new BigDecimal(txtTime.getText());
            DefaultTableModel model = (DefaultTableModel) jTEvents.getModel();
            if (model.getRowCount() > 0) {
                time = time.add(new BigDecimal(model.getValueAt(model.getRowCount() - 1, 0).toString()));
            }
            eventos.addAll(this.si.getSimulator().play(time));
            eventos.sort(new Event());
            BigDecimal timeEvent = new BigDecimal("0.00");
            while (!eventos.isEmpty() && timeEvent.compareTo(time) <= 0) {
                Event e = eventos.get(0);
                timeEvent = e.getTime();
                if (timeEvent.compareTo(time) <= 0) {
                    model.addRow(new Object[]{e.getTime(), e.getHostOrigen().getName(), e.getHostDestino().getName(), e.getLinker().getIp(), e.getInstant(), e.getMensaje()});
                    eventos.remove(0);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Se necesita insertar tiempo de envío o el formato es incorrecto", "Tiempo de envío", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnPlayUntilActionPerformed

    public JToolBar getjToolBarTrace() {
        return tbtMenu;
    }

    public void setjToolBarTrace(JToolBar jToolBarTrace) {
        this.tbtMenu = jToolBarTrace;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNextTrace;
    private javax.swing.JButton btnPlayUntil;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTEvents;
    private javax.swing.JPanel jTableTrace;
    private javax.swing.JPanel jTrace;
    private javax.swing.JToolBar tbtMenu;
    private javax.swing.JToolBar tbtMenu2;
    private javax.swing.JTextField txtTime;
    // End of variables declaration//GEN-END:variables

    private void configComponents(List<Event> eventos) {
        setLocation((getToolkit().getScreenSize().width - this.getWidth()) / 2,
                (getToolkit().getScreenSize().height - this.getHeight()) / 2);
        DefaultTableModel model = (DefaultTableModel) jTEvents.getModel();
        for (Event e : eventos) {
            model.addRow(new Object[]{e.getTime(), e.getHostOrigen().getName(), e.getHostDestino().getName(), e.getLinker().getIp(), e.getInstant(), e.getMensaje()});
        }
        this.btnNextTrace.setVisible(false);
        this.btnPlayUntil.setVisible(false);
        this.txtTime.setVisible(false);
        jTEvents.updateUI();
    }
}
